{"version":3,"sources":["Components/Searchbar.js","Components/Pagination.js","utils.js","Components/Modal.js","Containers/Output.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","useState","searchInput","setSearchInput","datatypes","searchData","categoryLabels","screenWidth","map","datatype","type","value","toLowerCase","name","className","id","checked","selected","onChange","event","setFetchUrl","target","setSelectedDataType","setPageSelected","setIsLoading","setIsSearching","disabled","isLoading","title","htmlFor","datalist","length","filter","item","startsWith","includes","url","cancelSearch","isSearching","onClick","setData","startSearch","sort","a","b","action","list","size","placeholder","onKeyDown","key","Pagination","NaN","pageToJumpTo","setPageToJumpTo","resultsNumber","data","pageSelected","itemsPerPage","pages","wrongPageNumber","pageButtons","Object","keys","flatMap","page","index","array","parseInt","Math","abs","prevPageSelected","min","max","tooltip","document","querySelector","input","classList","contains","add","remove","onKeyPress","isNaN","undefined","setTimeout","setItemsPerPage","makeStringReadable","string","result","toUpperCase","slice","replace","Modal","rootElementRef","useRef","createElement","modalDataToDisplay","setModalDataToDisplay","isModalLoading","setIsModalLoading","modalData","useEffect","rootElement","current","modalRoot","getElementById","appendChild","removeChild","Promise","all","entries","Array","isArray","fetch","response","json","fetchedData","join","fromEntries","getDataForModal","console","log","modal","selectedDataType","setShowModal","ReactDOM","createPortal","Output","showModal","setModalData","speciesNames","additionalInfo","species","gender","vehicle_class","starship_class","classification","designation","climate","terrain","prevShowModal","episode_id","App","setSearchData","setSpeciesNames","error","setError","fetchUrl","setPages","window","innerWidth","setScreenWidth","speciesDictionary","total","concat","results","next","entry","getSpeciesNames","getData","currPage","pagesDictionary","dataToPaginate","from","splice","createPages","handleResize","addEventListener","removeEventListener","message","class","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.ac1133b2.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment } from 'react';\r\n\r\nfunction Searchbar(props) {\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  const datatypes = ['People', 'Vehicles', 'Starships', 'Planets', 'Species', 'Films'];\r\n\r\n  const {searchData, screenWidth} = props;\r\n\r\n  const categoryLabels = screenWidth > 425 ?\r\n\r\n   datatypes.map(datatype => {\r\n    return <Fragment key = {datatype}>\r\n    <input type = 'radio' value = {datatype.toLowerCase()} name = 'dataType' className = 'datatypeInput' id = {datatype.toLowerCase()} checked = {props.selected === datatype.toLowerCase()}\r\n    onChange = {(event) => {\r\n      props.setFetchUrl(`https://swapi.py4e.com/api/${event.target.value}/`);\r\n      props.setSelectedDataType(event.target.value);\r\n      props.setPageSelected(1);\r\n      props.setIsLoading(true);\r\n      props.setIsSearching(false);\r\n      setSearchInput('');\r\n    }\r\n    }\r\n    disabled = {props.isLoading && props.selected !== datatype.toLowerCase()}\r\n    title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded before selecting another data category' : ''}></input>\r\n    <label className = 'datatypeLabel' htmlFor = {datatype.toLowerCase()} title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded' : ''}>{datatype}</label>\r\n    </Fragment>\r\n   }) :\r\n\r\n    <section className = 'categoryLabels'>\r\n      {datatypes.map(datatype => {\r\n        return <Fragment key = {datatype}>\r\n        <span>\r\n          <input type = 'radio' value = {datatype.toLowerCase()} name = 'dataType' className = 'datatypeInput' id = {datatype.toLowerCase()} checked = {props.selected === datatype.toLowerCase()}\r\n          onChange = {(event) => {\r\n            props.setFetchUrl(`https://swapi.py4e.com/api/${event.target.value}/`);\r\n            props.setSelectedDataType(event.target.value);\r\n            props.setPageSelected(1);\r\n            props.setIsLoading(true);\r\n            props.setIsSearching(false);\r\n            setSearchInput('');\r\n          }\r\n          }\r\n          disabled = {props.isLoading && props.selected !== datatype.toLowerCase()}\r\n          title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded before selecting another data category' : ''}></input>\r\n          <label className = 'datatypeLabel' htmlFor = {datatype.toLowerCase()} title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded' : ''}>{datatype}</label>\r\n        </span>\r\n        </Fragment>\r\n      })}\r\n    </section>;\r\n\r\n  const datalist = searchInput.length >= 2 && searchData\r\n  .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n  .length > 0 ?\r\n   <datalist id = 'searchList'>\r\n    {searchData\r\n    .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n    .map(item => {\r\n      return <option key = {item.url} value = {item.name} />\r\n    })\r\n    }\r\n   </datalist>\r\n  : null;  \r\n\r\n  const cancelSearch = props.isSearching ? <button className = 'cancelSearchBtn' onClick = {(event) => {\r\n    props.setIsSearching(false);\r\n    props.setData(searchData);\r\n    props.setPageSelected(1);\r\n    setSearchInput('');\r\n  }}>Cancel search</button> : null;\r\n  \r\n  function startSearch() {\r\n    props.setData( searchData\r\n      .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\r\n      .sort( (a, b) => {\r\n        if (a.name.toLowerCase().startsWith(searchInput.toLowerCase()) && !b.name.toLowerCase().startsWith(searchInput.toLowerCase())) {\r\n          return -1;\r\n        } else if (a.name.toLowerCase().startsWith(searchInput.toLowerCase()) && b.name.toLowerCase().startsWith(searchInput.toLowerCase())) {\r\n          return 0;\r\n        } else {\r\n          return 1;\r\n        }\r\n    }) );\r\n    props.setPageSelected(1);\r\n    props.setIsSearching(true);\r\n    setSearchInput('');\r\n  }\r\n\r\n  return (  \r\n    <>  \r\n    <form className = 'selectForm' action = 'return false;'>\r\n\r\n      <fieldset>\r\n        <legend className = 'selectFormLegend'>What are we searching for?</legend>\r\n        {categoryLabels}\r\n      </fieldset>\r\n\r\n      <section className = 'searchbar'>\r\n        <label htmlFor = 'search-input' className = 'searchInputLabel'>Search for Star Wars data!</label>\r\n        <input list = 'searchList' className = 'searchInput' type = 'search' value = {searchInput} id = 'search-input' size = '24' disabled = {props.selected === 'films'}\r\n          placeholder = {props.selected === 'films' ? 'Searching is disabled for films' : 'Start typing to find data'}\r\n          onChange = {(event) => setSearchInput(event.target.value)}\r\n          onKeyDown = {(event) => event.key === 'Enter' ? startSearch() : null}\r\n        ></input>\r\n\r\n        {datalist}\r\n\r\n        <button className = 'searchBtn' disabled = {props.selected === 'films' || searchInput.length < 1} onClick = {(event) => {\r\n          startSearch();\r\n        }}>Start search</button>\r\n        {cancelSearch}\r\n      </section>\r\n    </form>\r\n\r\n    \r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default Searchbar;","import React, {useState, useEffect, Fragment} from 'react';\r\n\r\nfunction Pagination(props) {\r\n  const [pageToJumpTo, setPageToJumpTo] = useState(NaN);\r\n\r\n  const resultsNumber = props.isSearching && props.data.length < 1 ?\r\n   <section className = 'output'><p>No matches found</p></section> :\r\n   <p className = 'resultsNumber'>Showing {`${1 + (props.pageSelected - 1) * props.itemsPerPage}`}-{`${(props.pageSelected - 1) * props.itemsPerPage + props.pages[props.pageSelected]?.length}`} of {`${props.data?.length}`} items</p>;\r\n\r\n  const wrongPageNumber = <div className = 'hidden wrongPageTooltip'>Wrong page number</div>;\r\n\r\n  const pageButtons = props.screenWidth > 300 ? Object.keys(props.pages).flatMap((page, index, array) => {\r\n    return parseInt(page, 10) === 1 || parseInt(page, 10) === props.pageSelected || parseInt(page, 10) === parseInt(array[array.length - 1], 10) ?\r\n    \r\n    (\r\n      <button disabled = {parseInt(page, 10) === props.pageSelected} key = {`page #${page}`} onClick = {(event) => {\r\n        props.setPageSelected(parseInt(page, 10));\r\n      }\r\n      }>{page}</button>\r\n    ) : Math.abs(parseInt(page, 10) - props.pageSelected) === 1 ?\r\n\r\n      parseInt(page, 10) - 1 > 1 && props.pageSelected - parseInt(page, 10) === 1 ?\r\n\r\n      (\r\n        <Fragment key = {`page #${page}`}>\r\n        <span>...</span>\r\n        <button onClick = {(event) => {\r\n          props.setPageSelected(parseInt(page, 10));\r\n        }\r\n        }>{page}</button>\r\n        </Fragment>\r\n      ) : parseInt(array[array.length - 1], 10) - parseInt(page, 10) > 1 && props.pageSelected - parseInt(page, 10) !== 1 ?\r\n\r\n        (\r\n          <Fragment key = {`page #${page}`}>          \r\n          <button key = {`page #${page}`} onClick = {(event) => {\r\n            props.setPageSelected(parseInt(page, 10));\r\n          }\r\n          }>{page}</button>\r\n          <span>...</span>\r\n          </Fragment>\r\n        ) :\r\n\r\n        (\r\n          <button key = {`page #${page}`} onClick = {(event) => {\r\n            props.setPageSelected(parseInt(page, 10));\r\n          }\r\n          }>{page}</button>\r\n\r\n    ) : [];\r\n  }) :\r\n\r\n    <select className = 'pageSelect' value = {props.pageSelected} onChange = {(event) => props.setPageSelected(parseInt(event.target.value, 10))}>\r\n      {Object.keys(props.pages).map(page => {\r\n        return <option key = {page} value = {page}>{page}</option>\r\n      })}\r\n    </select>;\r\n\r\n  const pages = props.isSearching && props.data.length < 1 ? <>{resultsNumber}</> :\r\n   <section className = 'pagination'>      \r\n    <div className = 'pages'>\r\n      <button disabled = {props.pageSelected <= 1} onClick = {(event) => {\r\n        if (props.pageSelected > 1) {\r\n          props.setPageSelected(prevPageSelected => prevPageSelected - 1);\r\n        }\r\n      }}>&lt;</button>\r\n\r\n      {pageButtons}\r\n\r\n      <button disabled = {props.pageSelected === parseInt(Object.keys(props.pages)[Object.keys(props.pages).length - 1], 10)} onClick = {(event) => {\r\n        if (props.pageSelected < Object.keys(props.pages)[Object.keys(props.pages).length - 1]) {\r\n          props.setPageSelected(prevPageSelected => prevPageSelected + 1);\r\n        }\r\n      }}>&gt;</button>\r\n    </div>\r\n\r\n    <label className = 'pageToJumpLabel' htmlFor = 'pageToJump'>Jump to page:</label>\r\n    <div className = 'tooltipBlock'>\r\n      <input className = 'pageToJumpInput' id = 'pageToJump' name = 'pageToJump' type = 'number' min = '1' max = {Object.keys(props.pages).length}\r\n      \r\n       onChange = {(event) => {\r\n        if (event.target.value < 0) {\r\n          event.target.value = event.target.min;\r\n        } else if (event.target.value > parseInt(event.target.max, 10)) {\r\n          event.target.value = event.target.max;\r\n        }\r\n\r\n        let tooltip = document.querySelector('.wrongPageTooltip');\r\n        let input = document.querySelector('.pageToJumpInput');;\r\n\r\n        if (!tooltip.classList.contains('hidden')) {\r\n          tooltip.classList.add('hidden');\r\n          input.classList.remove('wrongPageFocus');\r\n        }\r\n\r\n        setPageToJumpTo(parseInt(event.target.value, 10));\r\n      }}\r\n\r\n      onKeyPress = {(event) => {\r\n        if (event.key === 'Enter' && pageToJumpTo > 0) {\r\n          props.setPageSelected(pageToJumpTo);            \r\n        } else if (event.key === 'Enter' && (pageToJumpTo < 1 || isNaN(pageToJumpTo) || pageToJumpTo === undefined)) {            \r\n          let tooltip = document.querySelector('.wrongPageTooltip');\r\n          let input = document.querySelector('.pageToJumpInput');\r\n\r\n          tooltip.classList.remove('hidden');\r\n          input.classList.add('wrongPageFocus');\r\n\r\n          setTimeout(() => {\r\n            tooltip.classList.add('hidden');\r\n            input.classList.remove('wrongPageFocus');\r\n          }, 3000)\r\n        }\r\n      }}\r\n      ></input>\r\n      {wrongPageNumber}\r\n    </div>\r\n    \r\n    <button disabled = {pageToJumpTo < 1 || isNaN(pageToJumpTo)} onClick = {(event) => {\r\n      props.setPageSelected(pageToJumpTo);\r\n    }}\r\n    >Jump</button>\r\n\r\n    <label className = 'itemsPerPageLabel' htmlFor = 'itemsPerPage'>Maximum items displayed per page:</label>\r\n    <select className = 'itemsPerPageSelect' id = 'itemsPerPage' name = 'itemsPerPage' value = {props.itemsPerPage} onChange = {(event) => {\r\n      props.setItemsPerPage(parseInt(event.target.value, 10))\r\n    }}>\r\n      <option value = '10'>10</option>\r\n      <option value = '20'>20</option>\r\n      <option value = '30'>30</option>\r\n    </select>\r\n\r\n    {resultsNumber}\r\n  </section>;\r\n  \r\n  return (\r\n    <>\r\n    {pages}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;","function makeStringReadable(string) {\r\n  let result = string;\r\n\r\n  if (typeof result === 'string') {\r\n    result = `${result[0].toUpperCase()}${result.slice(1)}`;\r\n    result = result.replace(/_/g, ' ');\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport {makeStringReadable};\r\n\r\n ","import React, {useState, useEffect, useRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {makeStringReadable} from '../utils';\r\n\r\nfunction Modal(props) {  \r\n  const rootElementRef = useRef(document.createElement('article'));\r\n  const [modalDataToDisplay, setModalDataToDisplay] = useState({});\r\n  const [isModalLoading, setIsModalLoading] = useState(true);\r\n\r\n  const {modalData} = props;  \r\n\r\n  useEffect(() => {\r\n    let rootElement = rootElementRef.current;\r\n    const modalRoot = document.getElementById(\"modal-root\");\r\n    modalRoot.appendChild(rootElement);\r\n\r\n    return function cleanup() {\r\n      modalRoot.removeChild(rootElement);\r\n    };\r\n  })\r\n\r\n  useEffect(() => {\r\n    async function getDataForModal(modalData) {      \r\n      let data = await Promise.all(Object.entries(modalData).map(async ([key, value]) => {\r\n\r\n        if (Array.isArray(value) && value.length > 0) {\r\n          let fetchedData = await Promise.all(value.map(async (url) => {\r\n            const response = await fetch(url);\r\n            const result = await response.json();\r\n            return result.name || result.title;\r\n          }));\r\n          return [key, fetchedData.join(\", \")];\r\n\r\n        } else if (key === 'homeworld') {\r\n\r\n          if (value === null) {\r\n            return [key, ''];\r\n          } else {\r\n            const response = await fetch(value);\r\n            const result = await response.json();          \r\n            return [key, result.name];\r\n          }\r\n          \r\n        } else {\r\n          return [key, value];\r\n        }\r\n      }));              \r\n      setModalDataToDisplay(Object.fromEntries(data));      \r\n      setIsModalLoading(false);\r\n    }\r\n\r\n    getDataForModal(modalData);\r\n  }, [modalData, setIsModalLoading]);\r\n  console.log('modalDataToDisplay', modalDataToDisplay);\r\n\r\n\r\n  const modal = isModalLoading ? <p className = 'modal-window'>Loading...</p> :\r\n  <section className = 'modal-window'>          \r\n    <div className = {`modal-container${props.selectedDataType === 'films' ? ' modal-container-film' : ''}`}>\r\n      <button className = 'close-modal-btn' onClick = {(event) => props.setShowModal(false)}>X</button>\r\n      {Object.entries(modalDataToDisplay)\r\n        .filter(([key, value]) => (key !== 'created' && key !== 'edited' && key !== 'url') /*&& value?.length > 0*/)\r\n        .map(([key, value]) => {\r\n          switch(props.selectedDataType) {\r\n            case 'people':\r\n              return key === 'mass' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\r\n                </article>\r\n              ) : key === 'height' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} cm</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              );\r\n      \r\n            case 'vehicles':\r\n              return key === 'cargo_capacity' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\r\n                </article>\r\n              ) : key === 'length' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} m</p>\r\n                </article>\r\n              ) : key === 'max_atmosphering_speed' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kph</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              );\r\n      \r\n            case 'starships':\r\n              return key === 'cargo_capacity' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\r\n                </article>\r\n              ) : key === 'length' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} m</p>\r\n                </article>\r\n              ) : key === 'max_atmosphering_speed' && value !== 'n/a' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kph</p>\r\n                </article>\r\n              ) : key === 'MGLT' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} ph</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              );\r\n            case 'planets':\r\n              return key === 'rotation_period' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} hour(s)</p>\r\n                </article>\r\n              ) : key === 'diameter' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} km</p>\r\n                </article>\r\n              ) : key === 'orbital_period' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} day(s)</p>\r\n                </article>\r\n              ) : key === 'surface_water' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} %</p>\r\n                </article>\r\n              ) : key === 'gravity' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} G</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              );\r\n            case 'species':\r\n              return key === 'average_lifespan' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} year(s)</p>\r\n                </article>\r\n              ) : key === 'average_height' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} cm</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              );\r\n            case 'films':\r\n              return key !== 'episode_id' ? (\r\n                <article className = 'modal-row' key = {key}>\r\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\r\n                </article>\r\n              ) : (\r\n                <article className = 'modal-row' key = {key}>                  \r\n                  <p>{makeStringReadable(key)}</p><p>{value}</p>\r\n                </article>\r\n              );\r\n            default:\r\n          }\r\n        }\r\n        )}      \r\n    </div>\r\n  </section>;\r\n\r\n  return ReactDOM.createPortal(modal, rootElementRef.current);\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport Modal from '../Components/Modal.js';\r\nimport {makeStringReadable} from '../utils';\r\n\r\nconst Output = (props) => { \r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalData, setModalData] = useState({});  \r\n  const {selectedDataType, speciesNames} = props;  \r\n\r\n  const modal = showModal ? \r\n  (\r\n    <Modal setShowModal = {setShowModal} modalData = {modalData} setModalData = {setModalData} selectedDataType = {selectedDataType}/>\r\n  ) : null;  \r\n\r\n  return selectedDataType !== 'films' ? (\r\n    <>         \r\n    <section className = 'output'>      \r\n      {props.pages[props.pageSelected]?.map(item => {\r\n        let additionalInfo;\r\n        \r\n        if (selectedDataType === 'people') {\r\n          if (item?.species.length < 1) {\r\n            additionalInfo = `Unknown species, ${item?.gender}`;\r\n          } else additionalInfo = `${speciesNames[item?.species]}, ${item?.gender}`;\r\n        } else if (selectedDataType === 'vehicles') {\r\n          additionalInfo = makeStringReadable(item?.vehicle_class);\r\n        } else if (selectedDataType === 'starships') {\r\n          additionalInfo = makeStringReadable(item?.starship_class);\r\n        } else if (selectedDataType === 'species') {\r\n          additionalInfo = `${makeStringReadable(item?.classification)}, ${item?.designation}`;\r\n        } else if (selectedDataType === 'planets') {\r\n          additionalInfo = <span>{makeStringReadable(item?.climate)}<br/>{`${makeStringReadable(item?.terrain)}`}</span>;\r\n        }\r\n\r\n        return (\r\n          <article className = 'outputEntry' key = {item.url} onClick = {(event) => {\r\n              setShowModal(prevShowModal => !prevShowModal);\r\n              setModalData(item);\r\n            }}>\r\n            <p className = 'entryName'>{item.name}</p>            \r\n            <p className = 'entryType'>{additionalInfo}</p>\r\n          </article>\r\n        );\r\n      })}\r\n    </section>\r\n    {modal}\r\n    </>    \r\n  ) :\r\n  ( \r\n    <>    \r\n    <section className = 'output'>      \r\n      {props.pages[props.pageSelected].sort((a, b) => a.episode_id - b.episode_id).map(item => {\r\n        return (\r\n          <article className = 'outputEntry' key = {item.url} onClick = {(event) => {\r\n              setShowModal(prevShowModal => !prevShowModal);\r\n              setModalData(item);\r\n            }}>\r\n            <p className = 'entryName' >{item.title}</p>\r\n            <p className = 'entryType'>{`Episode ${item.episode_id}`}</p>\r\n          </article>\r\n        );\r\n      })}\r\n    </section>\r\n    {modal}\r\n    </>    \r\n  );\r\n}\r\n\r\nexport default Output;","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport '../Components/Searchbar.css';\r\nimport '../Components/Modal.css';\r\nimport '../Components/Pagination.css';\r\nimport './Output.css';\r\nimport Searchbar from \"../Components/Searchbar.js\";\r\nimport Pagination from \"../Components/Pagination.js\";\r\nimport Output from './Output.js';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [speciesNames, setSpeciesNames] = useState({});\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);   \r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const [selectedDataType, setSelectedDataType] = useState('people');\r\n  const [fetchUrl, setFetchUrl] = useState(`https://swapi.py4e.com/api/${selectedDataType}/`); \r\n\r\n  const [pages, setPages] = useState({});\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n  const [pageSelected, setPageSelected] = useState(1);\r\n\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);  \r\n\r\n  useEffect(() => {\r\n    async function getSpeciesNames() {\r\n\r\n      try {\r\n        let speciesDictionary = {};\r\n        let total = [];\r\n\r\n        let response = await fetch(`https://swapi.py4e.com/api/species/`);\r\n        let data = await response.json();    \r\n        total = total.concat(data.results);\r\n  \r\n        while(data.next) {      \r\n          if (data.next === null) {\r\n            break;\r\n          } else {\r\n            data = await fetch(data.next);\r\n            data = await data.json();        \r\n            total = total.concat(data.results);\r\n          }        \r\n        }\r\n        \r\n        for (let entry of total) {\r\n          speciesDictionary[entry.url] = entry.name;\r\n        }        \r\n\r\n        setSpeciesNames(speciesDictionary);\r\n\r\n      } catch(error) {\r\n        setError(error);\r\n      }\r\n    }\r\n    \r\n    getSpeciesNames();\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    async function getData(url) {\r\n        \r\n      try {\r\n        let total = [];\r\n  \r\n        let response = await fetch(url);\r\n        let data = await response.json();    \r\n        total = total.concat(data.results);\r\n  \r\n        while(data.next) {      \r\n          if (data.next === null) {\r\n            break;\r\n          } else {\r\n            data = await fetch(data.next);\r\n            data = await data.json();        \r\n            total = total.concat(data.results);\r\n          }        \r\n        }\r\n        setData(total);\r\n        setSearchData(total);\r\n        setIsLoading(false);\r\n      } catch(error) {\r\n        setError(error);\r\n      }  \r\n    }\r\n\r\n    getData(fetchUrl);\r\n  }, [fetchUrl]);\r\n\r\n  useEffect(() => {\r\n    function createPages(data, itemsPerPage) {\r\n      let currPage = 1;\r\n      let pagesDictionary = {};\r\n      let dataToPaginate = Array.from(data);\r\n\r\n      while(dataToPaginate.length) {      \r\n        let page = dataToPaginate.splice(0, itemsPerPage);\r\n        pagesDictionary[currPage] = page;\r\n        currPage++;    \r\n      }\r\n      \r\n      setPages(pagesDictionary);      \r\n    }\r\n\r\n    createPages(data, itemsPerPage);\r\n  }, [data, itemsPerPage]);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setScreenWidth(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  if (error) {\r\n    return <div>Error: {error.message}</div>\r\n  } else if (isLoading) {    \r\n    return (\r\n      <div className = 'wrapper'>\r\n        <header>\r\n          <h1 className = 'title'>SWAPIapp</h1>\r\n        </header>\r\n        <main>\r\n          <Searchbar searchData = {searchData} setData = {setData} screenWidth = {screenWidth} isSearching = {isSearching} setIsSearching = {setIsSearching} selected = {selectedDataType} isLoading = {isLoading} setIsLoading = {setIsLoading} setFetchUrl = {setFetchUrl} setSelectedDataType = {setSelectedDataType} setPageSelected = {setPageSelected} />                   \r\n        </main>\r\n        <div class=\"loading-ring\"><div></div><div></div><div></div><div></div>\r\n        </div> \r\n        <footer className = 'footer'>\r\n          <a href = 'https://swapi.py4e.com/' className = 'footerLink'>\r\n            <p>Powered by <span>SWAPI</span></p>\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className = 'wrapper'>\r\n        <header>\r\n          <h1 className = 'title'>SWAPIapp</h1>\r\n        </header>\r\n\r\n        <main>\r\n          <Searchbar searchData = {searchData} setData = {setData} screenWidth = {screenWidth} isSearching = {isSearching} setIsSearching = {setIsSearching} selected = {selectedDataType} isLoading = {isLoading} setIsLoading = {setIsLoading} setFetchUrl = {setFetchUrl} setSelectedDataType = {setSelectedDataType} setPageSelected = {setPageSelected} />\r\n          <Pagination data = {data} pages = {pages} screenWidth = {screenWidth} pageSelected = {pageSelected} setPageSelected = {setPageSelected} itemsPerPage = {itemsPerPage} setItemsPerPage = {setItemsPerPage} isSearching = {isSearching} />\r\n          <Output data = {data} speciesNames = {speciesNames} selectedDataType = {selectedDataType}  pages = {pages} pageSelected = {pageSelected} />\r\n        </main>\r\n        \r\n        <footer className = 'footer'>\r\n          <a href = 'https://swapi.py4e.com/' className = 'footerLink'>\r\n            <p>Powered by <span>SWAPI</span></p>\r\n          </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }  \r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}