{"version":3,"sources":["Components/Searchbar.js","Components/Pagination.js","utils.js","Components/Modal.js","Containers/Output.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","useState","searchInput","setSearchInput","datatypes","searchData","categoryLabels","screenWidth","map","datatype","type","value","toLowerCase","name","className","id","checked","selected","onChange","event","setFetchUrl","target","setSelectedDataType","setPageSelected","setIsLoading","setIsSearching","disabled","isLoading","title","htmlFor","datalist","length","filter","item","startsWith","includes","url","cancelSearch","isSearching","onClick","setData","startSearch","sort","a","b","action","list","size","placeholder","onKeyDown","key","Pagination","NaN","pageToJumpTo","setPageToJumpTo","resultsNumber","data","pageSelected","itemsPerPage","pages","wrongPageNumber","pageButtons","Object","keys","flatMap","page","index","array","parseInt","Math","abs","prevPageSelected","min","max","tooltip","document","querySelector","input","classList","contains","add","remove","onKeyPress","isNaN","undefined","setTimeout","setItemsPerPage","makeStringReadable","string","result","toUpperCase","slice","replace","Modal","rootElementRef","useRef","createElement","modalDataToDisplay","setModalDataToDisplay","isModalLoading","setIsModalLoading","modalData","useEffect","rootElement","current","modalRoot","getElementById","appendChild","removeChild","Promise","all","entries","Array","isArray","fetch","response","json","fetchedData","join","fromEntries","getDataForModal","modal","selectedDataType","setShowModal","ReactDOM","createPortal","Output","showModal","setModalData","speciesNames","additionalInfo","species","gender","vehicle_class","starship_class","classification","designation","climate","terrain","prevShowModal","episode_id","App","setSearchData","setSpeciesNames","error","setError","fetchUrl","setPages","window","innerWidth","setScreenWidth","speciesDictionary","total","concat","results","next","entry","getSpeciesNames","getData","currPage","pagesDictionary","dataToPaginate","from","splice","createPages","handleResize","addEventListener","removeEventListener","message","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.24b257b2.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment } from 'react';\n\nfunction Searchbar(props) {\n  const [searchInput, setSearchInput] = useState('');\n\n  const datatypes = ['People', 'Vehicles', 'Starships', 'Planets', 'Species', 'Films'];\n\n  const {searchData, screenWidth} = props;\n\n  const categoryLabels = screenWidth > 425 ?\n\n   datatypes.map(datatype => {\n    return <Fragment key = {datatype}>\n    <input type = 'radio' value = {datatype.toLowerCase()} name = 'dataType' className = 'datatypeInput' id = {datatype.toLowerCase()} checked = {props.selected === datatype.toLowerCase()}\n    onChange = {(event) => {\n      props.setFetchUrl(`https://swapi.dev/api/${event.target.value}/`);\n      props.setSelectedDataType(event.target.value);\n      props.setPageSelected(1);\n      props.setIsLoading(true);\n      props.setIsSearching(false);\n      setSearchInput('');\n    }\n    }\n    disabled = {props.isLoading && props.selected !== datatype.toLowerCase()}\n    title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded before selecting another data category' : ''}></input>\n    <label className = 'datatypeLabel' htmlFor = {datatype.toLowerCase()} title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded' : ''}>{datatype}</label>\n    </Fragment>\n   }) :\n\n    <section className = 'categoryLabels'>\n      {datatypes.map(datatype => {\n        return <Fragment key = {datatype}>\n        <span>\n          <input type = 'radio' value = {datatype.toLowerCase()} name = 'dataType' className = 'datatypeInput' id = {datatype.toLowerCase()} checked = {props.selected === datatype.toLowerCase()}\n          onChange = {(event) => {\n            props.setFetchUrl(`https://swapi.dev/api/${event.target.value}/`);\n            props.setSelectedDataType(event.target.value);\n            props.setPageSelected(1);\n            props.setIsLoading(true);\n            props.setIsSearching(false);\n            setSearchInput('');\n          }\n          }\n          disabled = {props.isLoading && props.selected !== datatype.toLowerCase()}\n          title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded before selecting another data category' : ''}></input>\n          <label className = 'datatypeLabel' htmlFor = {datatype.toLowerCase()} title = {props.isLoading && props.selected !== datatype.toLowerCase() ? 'Wait until data is loaded' : ''}>{datatype}</label>\n        </span>\n        </Fragment>\n      })}\n    </section>;\n\n  const datalist = searchInput.length >= 2 && searchData\n  .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\n  .length > 0 ?\n   <datalist id = 'searchList'>\n    {searchData\n    .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\n    .map(item => {\n      return <option key = {item.url} value = {item.name} />\n    })\n    }\n   </datalist>\n  : null;  \n\n  const cancelSearch = props.isSearching ? <button className = 'cancelSearchBtn' onClick = {(event) => {\n    props.setIsSearching(false);\n    props.setData(searchData);\n    props.setPageSelected(1);\n    setSearchInput('');\n  }}>Cancel search</button> : null;\n  \n  function startSearch() {\n    props.setData( searchData\n      .filter(item => item.name.toLowerCase().startsWith(searchInput.toLowerCase()) || item.name.toLowerCase().includes(searchInput.toLowerCase()))\n      .sort( (a, b) => {\n        if (a.name.toLowerCase().startsWith(searchInput.toLowerCase()) && !b.name.toLowerCase().startsWith(searchInput.toLowerCase())) {\n          return -1;\n        } else if (a.name.toLowerCase().startsWith(searchInput.toLowerCase()) && b.name.toLowerCase().startsWith(searchInput.toLowerCase())) {\n          return 0;\n        } else {\n          return 1;\n        }\n    }) );\n    props.setPageSelected(1);\n    props.setIsSearching(true);\n    setSearchInput('');\n  }\n\n  return (  \n    <>  \n    <form className = 'selectForm' action = 'return false;'>\n\n      <fieldset>\n        <legend className = 'selectFormLegend'>What are we searching for?</legend>\n        {categoryLabels}\n      </fieldset>\n\n      <section className = 'searchbar'>\n        <label htmlFor = 'search-input' className = 'searchInputLabel'>Search for Star Wars data!</label>\n        <input list = 'searchList' className = 'searchInput' type = 'search' value = {searchInput} id = 'search-input' size = '24' disabled = {props.selected === 'films'}\n          placeholder = {props.selected === 'films' ? 'Searching is disabled for films' : 'Start typing to find data'}\n          onChange = {(event) => setSearchInput(event.target.value)}\n          onKeyDown = {(event) => event.key === 'Enter' ? startSearch() : null}\n        ></input>\n\n        {datalist}\n\n        <button className = 'searchBtn' disabled = {props.selected === 'films' || searchInput.length < 1} onClick = {(event) => {\n          startSearch();\n        }}>Start search</button>\n        {cancelSearch}\n      </section>\n    </form>\n\n    \n    </>\n    \n  );\n}\n\nexport default Searchbar;","import React, {useState, useEffect, Fragment} from 'react';\n\nfunction Pagination(props) {\n  const [pageToJumpTo, setPageToJumpTo] = useState(NaN);\n\n  const resultsNumber = props.isSearching && props.data.length < 1 ?\n   <section className = 'output'><p>No matches found</p></section> :\n   <p className = 'resultsNumber'>Showing {`${1 + (props.pageSelected - 1) * props.itemsPerPage}`}-{`${(props.pageSelected - 1) * props.itemsPerPage + props.pages[props.pageSelected]?.length}`} of {`${props.data?.length}`} items</p>;\n\n  const wrongPageNumber = <div className = 'hidden wrongPageTooltip'>Wrong page number</div>;\n\n  const pageButtons = props.screenWidth > 300 ? Object.keys(props.pages).flatMap((page, index, array) => {\n    return parseInt(page, 10) === 1 || parseInt(page, 10) === props.pageSelected || parseInt(page, 10) === parseInt(array[array.length - 1], 10) ?\n    \n    (\n      <button disabled = {parseInt(page, 10) === props.pageSelected} key = {`page #${page}`} onClick = {(event) => {\n        props.setPageSelected(parseInt(page, 10));\n      }\n      }>{page}</button>\n    ) : Math.abs(parseInt(page, 10) - props.pageSelected) === 1 ?\n\n      parseInt(page, 10) - 1 > 1 && props.pageSelected - parseInt(page, 10) === 1 ?\n\n      (\n        <Fragment key = {`page #${page}`}>\n        <span>...</span>\n        <button onClick = {(event) => {\n          props.setPageSelected(parseInt(page, 10));\n        }\n        }>{page}</button>\n        </Fragment>\n      ) : parseInt(array[array.length - 1], 10) - parseInt(page, 10) > 1 && props.pageSelected - parseInt(page, 10) !== 1 ?\n\n        (\n          <Fragment key = {`page #${page}`}>          \n          <button key = {`page #${page}`} onClick = {(event) => {\n            props.setPageSelected(parseInt(page, 10));\n          }\n          }>{page}</button>\n          <span>...</span>\n          </Fragment>\n        ) :\n\n        (\n          <button key = {`page #${page}`} onClick = {(event) => {\n            props.setPageSelected(parseInt(page, 10));\n          }\n          }>{page}</button>\n\n    ) : [];\n  }) :\n\n    <select className = 'pageSelect' value = {props.pageSelected} onChange = {(event) => props.setPageSelected(parseInt(event.target.value, 10))}>\n      {Object.keys(props.pages).map(page => {\n        return <option key = {page} value = {page}>{page}</option>\n      })}\n    </select>;\n\n  const pages = props.isSearching && props.data.length < 1 ? <>{resultsNumber}</> :\n   <section className = 'pagination'>      \n    <div className = 'pages'>\n      <button disabled = {props.pageSelected <= 1} onClick = {(event) => {\n        if (props.pageSelected > 1) {\n          props.setPageSelected(prevPageSelected => prevPageSelected - 1);\n        }\n      }}>&lt;</button>\n\n      {pageButtons}\n\n      <button disabled = {props.pageSelected === parseInt(Object.keys(props.pages)[Object.keys(props.pages).length - 1], 10)} onClick = {(event) => {\n        if (props.pageSelected < Object.keys(props.pages)[Object.keys(props.pages).length - 1]) {\n          props.setPageSelected(prevPageSelected => prevPageSelected + 1);\n        }\n      }}>&gt;</button>\n    </div>\n\n    <label className = 'pageToJumpLabel' htmlFor = 'pageToJump'>Jump to page:</label>\n    <div className = 'tooltipBlock'>\n      <input className = 'pageToJumpInput' id = 'pageToJump' name = 'pageToJump' type = 'number' min = '1' max = {Object.keys(props.pages).length}\n      \n       onChange = {(event) => {\n        if (event.target.value < 0) {\n          event.target.value = event.target.min;\n        } else if (event.target.value > parseInt(event.target.max, 10)) {\n          event.target.value = event.target.max;\n        }\n\n        let tooltip = document.querySelector('.wrongPageTooltip');\n        let input = document.querySelector('.pageToJumpInput');;\n\n        if (!tooltip.classList.contains('hidden')) {\n          tooltip.classList.add('hidden');\n          input.classList.remove('wrongPageFocus');\n        }\n\n        setPageToJumpTo(parseInt(event.target.value, 10));\n      }}\n\n      onKeyPress = {(event) => {\n        if (event.key === 'Enter' && pageToJumpTo > 0) {\n          props.setPageSelected(pageToJumpTo);            \n        } else if (event.key === 'Enter' && (pageToJumpTo < 1 || isNaN(pageToJumpTo) || pageToJumpTo === undefined)) {            \n          let tooltip = document.querySelector('.wrongPageTooltip');\n          let input = document.querySelector('.pageToJumpInput');\n\n          tooltip.classList.remove('hidden');\n          input.classList.add('wrongPageFocus');\n\n          setTimeout(() => {\n            tooltip.classList.add('hidden');\n            input.classList.remove('wrongPageFocus');\n          }, 3000)\n        }\n      }}\n      ></input>\n      {wrongPageNumber}\n    </div>\n    \n    <button className = 'jumpToPageButton' disabled = {pageToJumpTo < 1 || isNaN(pageToJumpTo)} onClick = {(event) => {\n      props.setPageSelected(pageToJumpTo);\n    }}\n    >Jump</button>\n\n    <label className = 'itemsPerPageLabel' htmlFor = 'itemsPerPage'>Maximum items displayed per page:</label>\n    <select className = 'itemsPerPageSelect' id = 'itemsPerPage' name = 'itemsPerPage' value = {props.itemsPerPage} onChange = {(event) => {\n      props.setItemsPerPage(parseInt(event.target.value, 10))\n    }}>\n      <option value = '10'>10</option>\n      <option value = '20'>20</option>\n      <option value = '30'>30</option>\n    </select>\n\n    {resultsNumber}\n  </section>;\n  \n  return (\n    <>\n    {pages}\n    </>\n  );\n}\n\nexport default Pagination;","function makeStringReadable(string) {\n  let result = string;\n\n  if (typeof result === 'string') {\n    result = `${result[0].toUpperCase()}${result.slice(1)}`;\n    result = result.replace(/_/g, ' ');\n  }\n  \n  return result;\n}\n\nexport {makeStringReadable};\n\n ","import React, {useState, useEffect, useRef} from 'react';\nimport ReactDOM from 'react-dom';\nimport {makeStringReadable} from '../utils';\n\nfunction Modal(props) {  \n  const rootElementRef = useRef(document.createElement('article'));\n  const [modalDataToDisplay, setModalDataToDisplay] = useState({});\n  const [isModalLoading, setIsModalLoading] = useState(true);\n\n  const {modalData} = props;  \n\n  useEffect(() => {\n    let rootElement = rootElementRef.current;\n    const modalRoot = document.getElementById(\"modal-root\");\n    modalRoot.appendChild(rootElement);\n\n    return function cleanup() {\n      modalRoot.removeChild(rootElement);\n    };\n  })\n\n  useEffect(() => {\n    async function getDataForModal(modalData) {      \n      let data = await Promise.all(Object.entries(modalData).map(async ([key, value]) => {\n\n        if (Array.isArray(value) && value.length > 0) {\n          let fetchedData = await Promise.all(value.map(async (url) => {\n            const response = await fetch(url);\n            const result = await response.json();\n            return result.name || result.title;\n          }));\n          return [key, fetchedData.join(\", \")];\n\n        } else if (key === 'homeworld') {\n\n          if (value === null) {\n            return [key, ''];\n          } else {\n            const response = await fetch(value);\n            const result = await response.json();          \n            return [key, result.name];\n          }\n          \n        } else {\n          return [key, value];\n        }\n      }));              \n      setModalDataToDisplay(Object.fromEntries(data));      \n      setIsModalLoading(false);\n    }\n\n    getDataForModal(modalData);\n  }, [modalData, setIsModalLoading]);\n\n  const modal = isModalLoading ? <p className = 'modal-window'>Loading...</p> :\n  <section className = 'modal-window'>          \n    <div className = {`modal-container${props.selectedDataType === 'films' ? ' modal-container-film' : ''}`}>\n      <button className = 'close-modal-btn' onClick = {(event) => props.setShowModal(false)}>X</button>\n      {Object.entries(modalDataToDisplay)\n        .filter(([key, value]) => (key !== 'created' && key !== 'edited' && key !== 'url') /*&& value?.length > 0*/)\n        .map(([key, value]) => {\n          switch(props.selectedDataType) {\n            case 'people':\n              return key === 'mass' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\n                </article>\n              ) : key === 'height' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} cm</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p>{value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              );\n      \n            case 'vehicles':\n              return key === 'cargo_capacity' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\n                </article>\n              ) : key === 'length' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} m</p>\n                </article>\n              ) : key === 'max_atmosphering_speed' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kph</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              );\n      \n            case 'starships':\n              return key === 'cargo_capacity' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kg</p>\n                </article>\n              ) : key === 'length' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} m</p>\n                </article>\n              ) : key === 'max_atmosphering_speed' && value !== 'n/a' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} kph</p>\n                </article>\n              ) : key === 'MGLT' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} ph</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              );\n\n            case 'planets':\n              return key === 'rotation_period' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} hour(s)</p>\n                </article>\n              ) : key === 'diameter' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} km</p>\n                </article>\n              ) : key === 'orbital_period' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} day(s)</p>\n                </article>\n              ) : key === 'surface_water' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} %</p>\n                </article>\n              ) : key === 'gravity' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} G</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              );\n\n            case 'species':\n              return key === 'average_lifespan' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} year(s)</p>\n                </article>\n              ) : key === 'average_height' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')} cm</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              );\n\n            default:\n              return key !== 'episode_id' ? (\n                <article className = 'modal-row' key = {key}>\n                  <p>{makeStringReadable(key)}:</p><p> {value?.length > 0 ? makeStringReadable(value) : makeStringReadable('none')}</p>\n                </article>\n              ) : (\n                <article className = 'modal-row' key = {key}>                  \n                  <p>{makeStringReadable(key)}</p><p>{value}</p>\n                </article>\n              );            \n          }\n        }\n        )}      \n    </div>\n  </section>;\n\n  return ReactDOM.createPortal(modal, rootElementRef.current);\n}\n\nexport default Modal;","import React, { useState, useEffect, Fragment } from 'react';\nimport Modal from '../Components/Modal.js';\nimport {makeStringReadable} from '../utils';\n\nconst Output = (props) => { \n  const [showModal, setShowModal] = useState(false);\n  const [modalData, setModalData] = useState({});  \n  const {selectedDataType, speciesNames} = props;  \n\n  const modal = showModal ? \n  (\n    <Modal setShowModal = {setShowModal} modalData = {modalData} setModalData = {setModalData} selectedDataType = {selectedDataType}/>\n  ) : null;\n\n  return selectedDataType !== 'films' ? (\n    <>         \n    <section className = 'output'>      \n      {props.pages[props.pageSelected]?.map(item => {\n        let additionalInfo;\n        \n        if (selectedDataType === 'people') {\n          if (item?.species?.length < 1) {\n            additionalInfo = `Unspecified species, ${item?.gender}`;\n          } else additionalInfo = `${speciesNames[item?.species]}, ${item?.gender}`;\n        } else if (selectedDataType === 'vehicles') {\n          additionalInfo = makeStringReadable(item?.vehicle_class);\n        } else if (selectedDataType === 'starships') {\n          additionalInfo = makeStringReadable(item?.starship_class);\n        } else if (selectedDataType === 'species') {\n          additionalInfo = `${makeStringReadable(item?.classification)}, ${item?.designation}`;\n        } else if (selectedDataType === 'planets') {\n          additionalInfo = <span>{makeStringReadable(item?.climate)}<br/>{`${makeStringReadable(item?.terrain)}`}</span>;\n        }\n\n        return (\n          <article className = 'outputEntry' key = {item.url} onClick = {(event) => {\n              setShowModal(prevShowModal => !prevShowModal);\n              setModalData(item);\n            }}>\n            <p className = 'entryName'>{item.name}</p>            \n            <p className = 'entryType'>{additionalInfo}</p>\n          </article>\n        );\n      })}\n    </section>\n    {modal}\n    </>    \n  ) :\n  ( \n    <>    \n    <section className = 'output'>      \n      {props.pages[props.pageSelected].sort((a, b) => a.episode_id - b.episode_id).map(item => {\n        return (\n          <article className = 'outputEntry' key = {item.url} onClick = {(event) => {\n              setShowModal(prevShowModal => !prevShowModal);\n              setModalData(item);\n            }}>\n            <p className = 'entryName' >{item.title}</p>\n            <p className = 'entryType'>{`Episode ${item.episode_id}`}</p>\n          </article>\n        );\n      })}\n    </section>\n    {modal}\n    </>    \n  );\n}\n\nexport default Output;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport '../Components/Searchbar.css';\nimport '../Components/Modal.css';\nimport '../Components/Pagination.css';\nimport './Output.css';\nimport Searchbar from \"../Components/Searchbar.js\";\nimport Pagination from \"../Components/Pagination.js\";\nimport Output from './Output.js';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [searchData, setSearchData] = useState([]);\n  const [speciesNames, setSpeciesNames] = useState({});\n\n  const [error, setError] = useState(null);\n\n  const [isLoading, setIsLoading] = useState(true);   \n  const [isSearching, setIsSearching] = useState(false);\n\n  const [selectedDataType, setSelectedDataType] = useState('people');\n  const [fetchUrl, setFetchUrl] = useState(`https://swapi.dev/api/${selectedDataType}/`); \n\n  const [pages, setPages] = useState({});\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [pageSelected, setPageSelected] = useState(1);\n\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);  \n\n  useEffect(() => {\n    async function getSpeciesNames() {\n\n      try {\n        let speciesDictionary = {};\n        let total = [];\n\n        let response = await fetch(`https://swapi.dev/api/species/`);\n        let data = await response.json();    \n        total = total.concat(data.results);\n  \n        while(data.next) {      \n          if (data.next === null) {\n            break;\n          } else {\n            data = await fetch(data.next);\n            data = await data.json();        \n            total = total.concat(data.results);\n          }        \n        }\n        \n        for (let entry of total) {\n          speciesDictionary[entry.url] = entry.name;\n        }        \n\n        setSpeciesNames(speciesDictionary);\n\n      } catch(error) {\n        setError(error);\n      }\n    }\n    \n    getSpeciesNames();\n  }, [])\n  \n  useEffect(() => {\n    async function getData(url) {\n        \n      try {\n        let total = [];\n  \n        let response = await fetch(url);\n        let data = await response.json();    \n        total = total.concat(data.results);\n  \n        while(data.next) {      \n          if (data.next === null) {\n            break;\n          } else {\n            data = await fetch(data.next);\n            data = await data.json();        \n            total = total.concat(data.results);\n          }        \n        }\n        setData(total);\n        setSearchData(total);\n        setIsLoading(false);\n      } catch(error) {\n        setError(error);\n      }  \n    }\n\n    getData(fetchUrl);\n  }, [fetchUrl]);\n\n  useEffect(() => {\n    function createPages(data, itemsPerPage) {\n      let currPage = 1;\n      let pagesDictionary = {};\n      let dataToPaginate = Array.from(data);\n\n      while(dataToPaginate.length) {      \n        let page = dataToPaginate.splice(0, itemsPerPage);\n        pagesDictionary[currPage] = page;\n        currPage++;    \n      }\n      \n      setPages(pagesDictionary);      \n    }\n\n    createPages(data, itemsPerPage);\n  }, [data, itemsPerPage]);\n\n  useEffect(() => {\n    function handleResize() {\n      setScreenWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  if (error) {\n    return <div>Error: {error.message}</div>\n  } else if (isLoading) {    \n    return (\n      <div className = 'wrapper'>\n        <header>\n          <h1 className = 'title'>SWAPIapp</h1>\n        </header>\n        <main>\n          <Searchbar searchData = {searchData} setData = {setData} screenWidth = {screenWidth} isSearching = {isSearching} setIsSearching = {setIsSearching} selected = {selectedDataType} isLoading = {isLoading} setIsLoading = {setIsLoading} setFetchUrl = {setFetchUrl} setSelectedDataType = {setSelectedDataType} setPageSelected = {setPageSelected} />                   \n        </main>\n        <div className = \"loading-ring\"><div></div><div></div><div></div><div></div>\n        </div> \n        <footer className = 'footer'>\n          <a href = 'https://swapi.dev/' className = 'footerLink'>\n            <p>Powered by <span>SWAPI</span></p>\n          </a>\n        </footer>\n      </div>\n    )\n  } else {\n    return (\n      <div className = 'wrapper'>\n        <header>\n          <h1 className = 'title'>SWAPIapp</h1>\n        </header>\n\n        <main>\n          <Searchbar searchData = {searchData} setData = {setData} screenWidth = {screenWidth} isSearching = {isSearching} setIsSearching = {setIsSearching} selected = {selectedDataType} isLoading = {isLoading} setIsLoading = {setIsLoading} setFetchUrl = {setFetchUrl} setSelectedDataType = {setSelectedDataType} setPageSelected = {setPageSelected} />\n          <Pagination data = {data} pages = {pages} screenWidth = {screenWidth} pageSelected = {pageSelected} setPageSelected = {setPageSelected} itemsPerPage = {itemsPerPage} setItemsPerPage = {setItemsPerPage} isSearching = {isSearching} />\n          <Output data = {data} speciesNames = {speciesNames} selectedDataType = {selectedDataType}  pages = {pages} pageSelected = {pageSelected} />\n        </main>\n        \n        <footer className = 'footer'>\n          <a href = 'https://swapi.dev/' className = 'footerLink'>\n            <p>Powered by <span>SWAPI</span></p>\n          </a>\n        </footer>\n      </div>\n    );\n  }  \n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n<React.StrictMode>\n  <App />\n</React.StrictMode>)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}